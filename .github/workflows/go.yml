name: Go-build-macos

on:
  push:
    branches:
      - main  # Change this to the branch you want to build on push

jobs:
  build:
    name: build

    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64
        go-version: [1.22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Display Go version
        run: go version

      - name: Install dependencies
        run: go mod tidy

      - name: Build
        run: go build -v -o agdownloader-${{ matrix.os }}-${{ matrix.arch }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v1.1.${{ github.run_number }} # Example tag format
          release_name: Release v1.1.${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./agdownloader-${{ matrix.os }}-${{ matrix.arch }}
          asset_name: agdownloader-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream

      - name: Upload binaries
        uses: actions/upload-artifact@v3
        with:
          name: agdownloader
          path: agdownloader-*
