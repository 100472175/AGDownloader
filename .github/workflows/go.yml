name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        arch: [amd64, arm64]
        exclude:
          - os: windows-latest
            arch: arm64

    steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.20

    - name: Check out code
      uses: actions/checkout@v3

    - name: Set Go environment variables
      run: |
        echo "GO111MODULE=on" >> $GITHUB_ENV
        echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

    - name: Set up environment
      run: |
        echo "GOOS=$(echo ${{ matrix.os }} | awk -F'-' '{print $1}')" >> $GITHUB_ENV
        echo "GOARCH=${{ matrix.arch }}" >> $GITHUB_ENV
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          echo "EXT=.exe" >> $GITHUB_ENV
        else
          echo "EXT=" >> $GITHUB_ENV
        fi

    - name: Install dependencies
      run: go get .

    - name: Build
      run: go build -o myprogram_${{ env.GOOS }}_${{ env.GOARCH }}${{ env.EXT }} .

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: myprogram
        path: |
          myprogram_*
